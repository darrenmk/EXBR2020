dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(100000000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
x <- rbind(x1,x2)
# how to index a matrix?
dataBinom <- rbinom(40,20,0.2)
x1 <- rnorm(1000,555,25) # reaction time for Group 1
dx1 <- density(x1)
hist(x1, freq = FALSE, main = "Histogram and density")
lines(dx1, lwd = 2, col = "red")
x2 <- rnorm(1000,545,15) # reaction time for Group 2
x <- rbind(x1,x2)
x
View(x)
x <- t(rbind(x1,x2))
View(x)
t.test(x)
t.test(x[,1],x[,2],alternative="two.sided",var.equal=FALSE)
dataBinom <- matrix(rbinom(100,50,0.1),nrows=50)
# how to index a matrix?
dataGaus <- rnorm(1000,555,25) # reaction time for Group 1
densityGaus <- density(dataGaus)
hist(dataGaus, freq = FALSE, main = "Histogram and density")
lines(densityGaus, lwd = 2, col = "red")
rbinom(100,50,0.1)
dataBinom <- matrix(rbinom(100,50,0.1),nrows=50)
dataBinom <- matrix(rbinom(100,50,0.1),nrow=50)
View(dataBinom)
View(dataBinom)
View(dataBinom)
View(dataBinom)
dataBinom <- matrix(rbinom(100,100,0.1), nrow=50)
View(dataBinom)
dataBinom[50:,2]
dataBinom[50:end,2]
data <- matrix(rbinom(100,100,0.1), nrow=50)
length(data)
for (i in 1:size(data)[1]){
print(data[i,1])
}
for (i in 1:dim(data)[1]){
print(data[i,1])
}
getwd()
getwd()
getwd)_
getwd()
setwd('D:/Data/Documents/Scripts/EXBR2020')
getwd()
install.packages("car")
install.packages("effects")
install.packages("tidyverse")
library(car)
library(effects)
library(tidyverse)
setwd('D:\\Data\\Documents\\Scripts\\EXBR2020')
dataGaus <- rnorm(1000,555,25)
class(dataGaus)
dataGaus
densityGaus <- density(dataGaus)
hist(dataGaus, freq = FALSE, main = "Histogram and density")
lines(densityGaus, lwd = 2, col = "red")
hist(dataGaus, freq = FALSE, main = "Histogram and density")
lines(densityGaus, lwd = 2, col = "red")
data <- matrix(rbinom(100,100,0.1), nrow=50)
View(data)
View(data)
View(data)
View(data)
View(data)
data1 <- data[,1]
View(data)
data1
View(data)
View(data)
data1
data2 <- data[20:30,]
data
data2
data3 <- data[50:100,2]
View(data)
dim(data)
dim(data)[1]
dim(data)[2]
View(data)
dim(data)[1]
1:dim(data)[1]
i=1
print(data[i,1])
View(data)
i=2
i
print(data[i,1])
View(data)
for (i in 1:dim(data)[1]){
print(data[i,1])
}
View(data)
setwd('D:\\Data\\Documents\\Scripts\\EXBR2020')
getwd()
subjects <- read.csv('React3Subjects.csv')
codes <- read.csv('React3Matrix.csv')
View(subjects)
View(codes)
View(codes)
data_append <- {}
dim(subjects)
dim(subjects)[1]
1:dim(subjects)[1]
View(subjects)
1:dim(subjects)[1]
file_append <- {}
1:4
s = 1
b = 1
filename <- paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
filename
View(subjects)
View(subjects)
subjects$sID
View(subjects)
subjects$sID[s]
b
paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
file0 = read.table(filename, sep="\t", header=FALSE, fill=TRUE)
file0
# this is just some processing
goodTrial1 <- file0[,3] != -2 # value of third column is NOT -2
goodTrial2 <- is.na(file0[,6]) # is NA in column 6
goodTrial3 <- !is.na(file0[,5]) # is NOT NA in column 5
goodTrials <- goodTrial1 & goodTrial2 & goodTrial3
file1 <- file0[goodTrials,]
# make our data file
file <- matrix(0,dim(file1)[1],5)
file[,1] <- s
file[,2] <- b
file[,3] <- file1[,4] # this is our motion condition
soa <- (file1[,5]+4)*(1000/60) # fame correction for motion simulator, this is our SOA
file[,4] <- soa
file[soa == -100,5] <- file1[soa < 0,1] + 100 # adjust reaction time
file[soa >= 0,5] <- file1[soa >= 0,1] #keep reaction time
View(file)
file
file_append <- {}
rbind(file_append,file)
file_append <- rbind(file_append,file)
b = 2
filename <- paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
file0 = read.table(filename, sep="\t", header=FALSE, fill=TRUE)
# this is just some processing
goodTrial1 <- file0[,3] != -2 # value of third column is NOT -2
goodTrial2 <- is.na(file0[,6]) # is NA in column 6
goodTrial3 <- !is.na(file0[,5]) # is NOT NA in column 5
goodTrials <- goodTrial1 & goodTrial2 & goodTrial3
file1 <- file0[goodTrials,]
# make our data file
file <- matrix(0,dim(file1)[1],5)
file[,1] <- s
file[,2] <- b
file[,3] <- file1[,4] # this is our motion condition
soa <- (file1[,5]+4)*(1000/60) # fame correction for motion simulator, this is our SOA
file[,4] <- soa
file[soa == -100,5] <- file1[soa < 0,1] + 100 # adjust reaction time
file[soa >= 0,5] <- file1[soa >= 0,1] #keep reaction time
file
file_append <- rbind(file_append,file)
file_append <- {}
for (b in 1:4){
filename <- paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
file0 = read.table(filename, sep="\t", header=FALSE, fill=TRUE)
# this is just some processing
goodTrial1 <- file0[,3] != -2 # value of third column is NOT -2
goodTrial2 <- is.na(file0[,6]) # is NA in column 6
goodTrial3 <- !is.na(file0[,5]) # is NOT NA in column 5
goodTrials <- goodTrial1 & goodTrial2 & goodTrial3
file1 <- file0[goodTrials,]
# make our data file
file <- matrix(0,dim(file1)[1],5)
file[,1] <- s
file[,2] <- b
file[,3] <- file1[,4] # this is our motion condition
soa <- (file1[,5]+4)*(1000/60) # fame correction for motion simulator, this is our SOA
file[,4] <- soa
file[soa == -100,5] <- file1[soa < 0,1] + 100 # adjust reaction time
file[soa >= 0,5] <- file1[soa >= 0,1] #keep reaction time
file_append <- rbind(file_append,file)
}
View(file_append)
data_append <- {}
s=1
file_append <- {}
for (b in 1:4){
filename <- paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
file0 = read.table(filename, sep="\t", header=FALSE, fill=TRUE)
# this is just some processing
goodTrial1 <- file0[,3] != -2 # value of third column is NOT -2
goodTrial2 <- is.na(file0[,6]) # is NA in column 6
goodTrial3 <- !is.na(file0[,5]) # is NOT NA in column 5
goodTrials <- goodTrial1 & goodTrial2 & goodTrial3
file1 <- file0[goodTrials,]
# make our data file
file <- matrix(0,dim(file1)[1],5)
file[,1] <- s
file[,2] <- b
file[,3] <- file1[,4] # this is our motion condition
soa <- (file1[,5]+4)*(1000/60) # fame correction for motion simulator, this is our SOA
file[,4] <- soa
file[soa == -100,5] <- file1[soa < 0,1] + 100 # adjust reaction time
file[soa >= 0,5] <- file1[soa >= 0,1] #keep reaction time
file_append <- rbind(file_append,file)
}
data_append <- rbind(data_append,file_append)
for (s in 1:dim(subjects)[1]){
file_append <- {}
for (b in 1:4){
filename <- paste('RawData\\react', subjects$sID[s], '_0', b, '_0.MLOG', sep="")
file0 = read.table(filename, sep="\t", header=FALSE, fill=TRUE)
# this is just some processing
goodTrial1 <- file0[,3] != -2 # value of third column is NOT -2
goodTrial2 <- is.na(file0[,6]) # is NA in column 6
goodTrial3 <- !is.na(file0[,5]) # is NOT NA in column 5
goodTrials <- goodTrial1 & goodTrial2 & goodTrial3
file1 <- file0[goodTrials,]
# make our data file
file <- matrix(0,dim(file1)[1],5)
file[,1] <- s
file[,2] <- b
file[,3] <- file1[,4] # this is our motion condition
soa <- (file1[,5]+4)*(1000/60) # fame correction for motion simulator, this is our SOA
file[,4] <- soa
file[soa == -100,5] <- file1[soa < 0,1] + 100 # adjust reaction time
file[soa >= 0,5] <- file1[soa >= 0,1] #keep reaction time
file_append <- rbind(file_append,file)
}
data_append <- rbind(data_append,file_append)
}
colnames(data_append) <- c("Subject","Block","Condition","SOA","RT")
newCode <- rep(0,dim(data_append)[1])
for (i in 1:dim(data_append)[1]){
newCode[i] <- which(data_append[i,3]==codes$code)
}
data_append[,3] <- newCode # replace old codes with new codes
View(data_append)
View(data_append)
1:27
o=1
data_append[,3]
View(data_append)
o
View(data_append)
data_append[1,3]==1
data_append[1,3]==15
idx <- data_append[,3]==o
idx
View(data_append)
data_append[idx]
data_append[idx,]
data_append[idx,5]
a <- data_append[idx,5]
hist(a)
hist(a)
hist(log(a)
hist(log(a))
hist(log(a))
logRT <- log(data_append[idx,5]) # index by condition number, get RT then calculate log
logRT
quantile(logRT)
quantile(logRT)[2]
logRT <- log(data_append[idx,5]) # index by condition number, get RT then calculate log
Q1 <- quantile(logRT)[2]
Q3 <- quantile(logRT)[4]
IQR <- Q3-Q1
lowOutlier <- logRT < Q1 - 3*IQR
highOutlier <- logRT > Q3 + 3*IQR
condOutliers <- lowOutlier | highOutlier
lowOutlier
a <- c(FALSE,FALSE,TRUE)
b <- c(TRUE,FALSE,TRUE)
a
b
a | b
a & b
condOutliers <- lowOutlier | highOutlier
condOutliers
idx
idx[idx]
idx
idx[idx]
condOutliers
idx[idx]
idx
condOutliers
idx[idx] <- condOutliers # idx now includes outliers for this condition only
idx
allOutliers <- as.logical(rep(FALSE,dim(data_append)[1])) # first make this all FALSE
for (o in 1:27){
idx <- data_append[,3]==o
logRT <- log(data_append[idx,5]) # index by condition number, get RT then calculate log
Q1 <- quantile(logRT)[2]
Q3 <- quantile(logRT)[4]
IQR <- Q3-Q1
lowOutlier <- logRT < Q1 - 3*IQR
highOutlier <- logRT > Q3 + 3*IQR
condOutliers <- lowOutlier | highOutlier
idx[idx] <- condOutliers # idx now includes outliers for this condition only
allOutliers <- allOutliers | idx # append after each loop
}
allOutliers
data <- data.frame(data_append[!allOutliers,])
allOutliers
!allOutliers
allOutliers
!allOutliers
data_append[!allOutliers,]
data <- data.frame(data_append[!allOutliers,])
data
grandMean <- tapply(data$RT,data$Condition,mean)
grandSd <- with(data,tapply(RT,Condition,sd))
grandSe <- grandSd / sqrt(35)
subjectMean <- tapply(data$RT,list(data$Subject,data$Condition),mean)
subjectBlockMean <- with(data,tapply(RT,list(Subject,Block,Condition),mean))
grandMean
View(data)
grandMean <- tapply(data$RT,data$Condition,mean)
grandMean
grandMean <- tapply(data$RT,data$Condition,mean)
grandSd <- with(data,tapply(RT,Condition,sd))
grandSe <- grandSd / sqrt(35)
subjectMean <- tapply(data$RT,list(data$Subject,data$Condition),mean)
subjectBlockMean <- with(data,tapply(RT,list(Subject,Block,Condition),mean))
subjectMean
View(subjectMean)
